// { Driver Code Starts
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
using namespace std;
/* Linked list Node */
struct Node {
    int data;
    struct Node* next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};

struct Node* addTwoLists(struct Node* first, struct Node* second);

void push(struct Node** head_ref, int new_data) {
    struct Node* new_Node = new Node(new_data);
    new_Node->next = (*head_ref);
    (*head_ref) = new_Node;
}
void printList(struct Node* Node) {
    while (Node != NULL) {
        printf("%d ", Node->data);
        Node = Node->next;
    }
    printf("\n");
}
void freeList(struct Node* Node) {
    struct Node* temp;
    while (Node != NULL) {
        temp = Node;
        Node = Node->next;
        free(temp);
    }
}
int main(void) {
    int t, n, m, i, x;
    cin >> t;
    while (t--) {
        struct Node* res = NULL;
        struct Node* first = NULL;
        struct Node* second = NULL;
        cin >> n;
        for (i = 0; i < n; i++) {
            cin >> x;
            push(&first, x);
        }
        cin >> m;
        for (i = 0; i < m; i++) {
            cin >> x;
            push(&second, x);
        }
        res = addTwoLists(first, second);
        printList(res);
        if (first) freeList(first);
        if (second) freeList(second);
    }
    return 0;
}
// } Driver Code Ends
/*
struct Node {
    int data;
    struct Node* next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};
*/
// write a function returns the resultant linked list
Node* addTwoLists(Node* first, Node* second) {
    // Code here
    int len1=0;int len2=0,i=0,j=0;
    int arr1[1000]={0};int arr2[1000]={0};
    Node*ptr1=first;
    Node*ptr2=second;
    Node*temp=NULL;
    while(ptr1!=NULL) { len1++; arr1[i++]=ptr1->data;ptr1=ptr1->next;}
    while(ptr2!=NULL)  { len2++; arr2[j++]=ptr2->data;ptr2=ptr2->next;}
    int size=(len1>=len2)?len1:len2;
    int arr[size];
    int carry=0,sum,flag,k=0;
    for(int i=0;i<size;i++)
    { sum=arr1[i]+arr2[i]+carry;
        if(sum>9&&i==size-1){arr[i]=sum%10;carry=sum/10;}
        else if(sum>9) { arr[i]=sum%10;carry=sum/10;}
        else    {arr[i]=sum;carry=0;}
        
    }
    Node*tem;
    if(len1>=len2)  {temp=first;flag=1;} else {temp=second;flag=0;}
    while(temp!=NULL)
    {  
        temp->data=arr[k++];
        tem=temp;
        temp=temp->next;
      ///  if(temp->next==NULL) { temp->next=new Node(carry); 
    }
    if(carry!=0)    tem->next=new Node(carry);
    return flag==1?first: second;
    
    
    
        
}
